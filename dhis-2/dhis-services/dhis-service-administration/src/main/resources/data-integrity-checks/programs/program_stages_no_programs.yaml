# Copyright (c) 2004-2022, University of Oslo
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
# Neither the name of the HISP project nor the names of its contributors may
# be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
---
name: program_stages_no_programs
description: Program stages with no associated program
section: Programs
section_order: 2
summary_sql: >-
  WITH rs as (
  SELECT a.uid,a.name
  FROM programstage a
  WHERE a.programid IS NULL
  )
  SELECT COUNT(*) as value,
  100.0 * COUNT(*) / NULLIF( (SELECT COUNT(*) from programstage),0) as percent
  from rs;
details_sql: >-
  SELECT 
    a.uid,
    a.name,
    CASE 
      WHEN EXISTS (
        SELECT 1 
        FROM event e 
        WHERE e.programstageid = a.programstageid
        LIMIT 1
      )
      THEN 'HAS_DATA: true'
      ELSE 'HAS_DATA: false'
    END AS comment
  FROM programstage a
  WHERE a.programid IS NULL;
severity: SEVERE
introduction: >
  All program stages should be associated with a program. This check identifies
  program stages that are not linked to any program. Versions of DHIS2 after and including 
  2.43 do not allow program stages to exist without being linked to a program and may
  result in the system not being able to start.
details_id_type: programStages
recommendation: >-
  You will need to either delete the program stage flagged by this check
  or link it to a program.You will need to either delete the program stage flagged by this check
  or link it to a program.
  
  If you wish to keep the program stage, you will need to link it to a program.
  Currently, the only way to link a program stage to a program is
  to alter the `programid` field in the `programstage` table in the database.
  
  If you want to link the program stage to a program, you will need to
  choose a program that is suitable for the program stage or create a new program 
  and run the following SQL command:
  
  UPDATE programstage SET programid = (SELECT programid from program where uid = '<program_uid>')
  WHERE uid = '<program_stage_uid>';
     
  Be sure to replace `<program_uid>` with the UID of the 
  program you want to link the program stage to,
  and `<program_stage_uid>` with the UID of the program stage you want to link.
  As is always the case with direct database manipulation, you should
  ensure that you have a backup of your database before running this command, 
  ensure that DHIS2 is not running, perform the change in a test environment first. 
  
  After linking the program stage to a program, 
  restart DHIS2 and re-run the integrity check to ensure that the program 
  stage is now linked to a program and the integrity check no longer flags it.
  
  Alternatively, if the program stage is not needed, you will need to delete it.
  The integrity check details will indicate whether the program stage has any associated data. 
  If there is associated data, you will need to delete that data first before 
  deleting the program stage. You can delete the associated program stage data 
  using the following SQL command:
  
  UPDATE event SET deleted = true WHERE programstageid = 
  (SELECT programstageid FROM programstage WHERE uid = '<program_stage_uid>');
    
  Replace `<program_stage_uid>` with the UID of the program stage you want to delete data for. 
  Once you have run this command return to the Data Administration app and choose "Maintenance" 
  and then tick "Permanently remove soft deleted events". Click "Perform maintenance" to 
  permanently delete the soft-deleted events associated with the program stage.
  
  After ensuring that all associated data has been deleted,
  you can delete the program stage itself using the API. 
  
  Using Postman, curl or similar tool, send a DELETE request to the following URL:
  
  https://<dhis2-instance>/api/programStages/<program_stage_uid>
  
  Be sure to replace `<dhis2-instance>` with the URL of your DHIS2 instance and `<program_stage_uid>` 
  with the UID of the program stage you want to delete.
  
  If you are unsure how to proceed or encounter issues when either trying to link 
  the program stage to a program or delete it, please feel free to reach out
  on the DHIS2 Community of Practice forum at https://community.dhis2.org.