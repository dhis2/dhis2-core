# Copyright (c) 2004-2022, University of Oslo
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
# Neither the name of the HISP project nor the names of its contributors may
# be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
---
name: orgunits_null_island
description: Organisation units located within 100 km of Null Island (0,0).
section: Organisation units
section_order: 6
summary_sql: >-
  WITH orgunits_null_island as (
  SELECT a.uid,a.name,ST_AsText(a.geometry)
  from organisationunit a
  INNER JOIN(
  SELECT uid, ST_DistanceSphere(ST_SetSRID(ST_MakePoint(0.0,0.0),4326),
  geometry) / 1000.0 as distance_km
  from organisationunit
  WHERE
  ST_GeometryType(geometry) = 'ST_Point'
  ) b ON a.uid = b.uid
  WHERE  distance_km < 100
  )
  SELECT 
  COUNT(*) as count,
  100.0 * COUNT(*) / NULLIF( (SELECT COUNT(*) FROM organisationunit), 0) as percent
  FROM orgunits_null_island;
details_sql: >-
  SELECT a.uid,a.name,ST_AsText(a.geometry) as comment
  from organisationunit a
  INNER JOIN(
  SELECT uid, ST_DistanceSphere(ST_SetSRID(ST_MakePoint(0.0,0.0),4326),
  geometry) / 1000.0 as distance_km
  from organisationunit
  WHERE
  ST_GeometryType(geometry) = 'ST_Point'
  ) b ON a.uid = b.uid
  WHERE  distance_km < 100
  ORDER BY name;
details_id_type: organisationUnits
severity: SEVERE
introduction: >
  A common problem when importing coordinates is the inclusion of coordinates situated around
  the point of [Null Island](https://en.wikipedia.org/wiki/Null_Island). This is the point
  on the Earth's surface where the Prime Meridian and Equator intersect with a latitude of 0
  and a longitude of 0. The point also happens to be situated currently in the middle of the
  ocean. This query identifies any points located within 100 km of the point having latitude
  and longitude equal to zero.
recommendation:
  Update the coordinates of the affected organization unit to the correct location.
