# Copyright (c) 2004-2022, University of Oslo
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
# Neither the name of the HISP project nor the names of its contributors may
# be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
---
name: category_option_combos_no_names
description: Category option combinations with no names.
section: Categories
section_order: 8
summary_sql: >-
  WITH coc_no_names as (
  SELECT uid,name FROM categoryoptioncombo WHERE name IS NULL OR name = ''
  )
  SELECT COUNT(*) as value,
  100 * COUNT(*) / NULLIF( (SELECT COUNT(*) FROM categoryoptioncombo), 0)  as percent
  FROM coc_no_names;
details_sql: >-
  SELECT uid,name FROM categoryoptioncombo WHERE name IS NULL OR name = '';
details_id_type: categoryOptionCombos
severity: SEVERE
introduction: >
  This check will find all category option combinations that do not have a name. Category option
  combinations should have a name to help identify them. Normally, names for category option combinations
  should be automatically generated based on the category options that are associated with the category
  but it is possible to manually set the name for a category option combination either via the API
  or directly in the database. Category option combinations with no names should be reviewed to
  determine if the name should be set or if the category option combination should be removed.
recommendation: >
  Review the category option combinations with no names and set the name for the category option
  combination. If the category option combination is not needed, it should be removed. Alternatively,
  the name can be set to a value which is more meaningful to the user.