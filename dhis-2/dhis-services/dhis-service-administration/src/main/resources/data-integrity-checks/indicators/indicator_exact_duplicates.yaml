# Copyright (c) 2004-2022, University of Oslo
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
# Neither the name of the HISP project nor the names of its contributors may
# be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
---
name: indicators_exact_duplicates
description: Indicators with the same formula.
section: Indicators
section_order: 8
summary_sql: >-
    WITH duplicated_indicators as (
    SELECT uid,name, numerator || '/' || denominator as comment from indicator where indicatorid in (
    SELECT unnest(indicators) as indicatorid from (
    SELECT expression,array_agg(indicatorid) as indicators FROM(
    SELECT indicatorid,replace(numerator || denominator, ' ','') as expression
      from indicator ) a
    GROUP BY expression
    HAVING array_length(array_agg(indicatorid),1) > 1 ) b ) 
    )   
    SELECT COUNT(*) as count,
    100 * COUNT(*) / NULLIF( (SELECT COUNT(*) FROM indicator), 0) as percent
    from duplicated_indicators;
details_sql: >-
      SELECT uid,name, numerator || '/' || denominator as comment from indicator where indicatorid in (
      SELECT unnest(indicators) as indicatorid from (
      SELECT expression,array_agg(indicatorid) as indicators FROM(
      SELECT indicatorid,replace(numerator || denominator, ' ','') as expression
        from indicator ) a
      GROUP BY expression
      HAVING array_length(array_agg(indicatorid),1) > 1 ) b )
      ORDER BY comment;
details_id_type: indicators
severity: WARNING
introduction: >
    Indicators should generally have unique formulas. This metadata check shows 
    indicators which have the exact same formulas. Spaces which are present are
    removed prior to comparison.
recommendation: >
    Duplicative indicators should be considered to be removed from the system, since
    they may cause confusion on the part of users as to which one should be used. 
    Consider deleting all but one of the duplicated indicators using the maintenance
    app. 
