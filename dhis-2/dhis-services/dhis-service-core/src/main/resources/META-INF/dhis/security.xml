<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:sec="http://www.springframework.org/schema/security"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

  <bean id="userDetailsService" class="org.hisp.dhis.security.DefaultUserDetailsService">
    <property name="userService" ref="org.hisp.dhis.user.UserService" />
    <property name="securityService" ref="org.hisp.dhis.security.SecurityService" />
  </bean>

  <bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

  <bean id="org.hisp.dhis.security.PasswordManager" class="org.hisp.dhis.security.spring.SpringSecurityPasswordManager">
    <property name="passwordEncoder" ref="bCryptPasswordEncoder" />
  </bean>

  <bean id="org.hisp.dhis.security.SecurityService" class="org.hisp.dhis.security.DefaultSecurityService">
    <property name="passwordManager" ref="org.hisp.dhis.security.PasswordManager" />
    <property name="emailMessageSender" ref="emailMessageSender" />
    <property name="userService" ref="org.hisp.dhis.user.UserService" />
    <property name="systemSettingManager" ref="org.hisp.dhis.setting.SystemSettingManager" />
    <property name="i18nManager" ref="org.hisp.dhis.i18n.I18nManager" />
  </bean>

  <!-- LDAP -->

  <bean id="contextSource" class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
    <constructor-arg ref="ldapUrl" />
    <property name="userDn" ref="ldapManagerDn" />
    <property name="password" ref="ldapManagerPassword" />
  </bean>

  <bean id="ldapAuthenticationProvider" class="org.hisp.dhis.security.ldap.authentication.CustomLdapAuthenticationProvider">
    <constructor-arg>
      <bean class="org.hisp.dhis.security.ldap.authentication.DhisBindAuthenticator">
        <constructor-arg ref="contextSource" />
        <property name="userSearch" ref="userSearch" />
      </bean>
    </constructor-arg>
    <constructor-arg>
      <bean class="org.springframework.security.ldap.authentication.UserDetailsServiceLdapAuthoritiesPopulator">
        <constructor-arg ref="userDetailsService" />
      </bean>
    </constructor-arg>
  </bean>

  <bean id="userSearch" class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
    <constructor-arg index="0" ref="ldapSearchBase" />
    <constructor-arg index="1" ref="ldapSearchFilter" />
    <constructor-arg index="2" ref="contextSource" />
  </bean>

  <bean id="ldapUrl" class="org.hisp.dhis.external.conf.ConfigurationPropertyFactoryBean">
    <constructor-arg value="LDAP_URL" />
  </bean>
  <bean id="ldapManagerDn" class="org.hisp.dhis.external.conf.ConfigurationPropertyFactoryBean">
    <constructor-arg value="LDAP_MANAGER_DN" />
  </bean>
  <bean id="ldapManagerPassword" class="org.hisp.dhis.external.conf.ConfigurationPropertyFactoryBean">
    <constructor-arg value="LDAP_MANAGER_PASSWORD" />
  </bean>
  <bean id="ldapSearchBase" class="org.hisp.dhis.external.conf.ConfigurationPropertyFactoryBean">
    <constructor-arg value="LDAP_SEARCH_BASE" />
  </bean>
  <bean id="ldapSearchFilter" class="org.hisp.dhis.external.conf.ConfigurationPropertyFactoryBean">
    <constructor-arg value="LDAP_SEARCH_FILTER" />
  </bean>

  <!-- OAuth2 -->

  <bean id="clientDetailsService" class="org.hisp.dhis.security.oauth2.DefaultClientDetailsService" />

  <bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.store.JdbcTokenStore">
    <constructor-arg name="dataSource" ref="dataSource" />
  </bean>

  <bean id="authorizationCodeServices" class="org.springframework.security.oauth2.provider.code.JdbcAuthorizationCodeServices">
    <constructor-arg name="dataSource" ref="dataSource" />
  </bean>

  <bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
    <property name="tokenStore" ref="tokenStore" />
    <property name="supportRefreshToken" value="true" />
  </bean>

  <bean id="clientDetailsUserService" class="org.hisp.dhis.security.oauth2.DefaultClientDetailsUserDetailsService">
    <constructor-arg ref="clientDetailsService" />
  </bean>

  <bean id="oAuth2AuthenticationManager" class="org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationManager">
    <property name="tokenServices" ref="tokenServices"/>
    <property name="clientDetailsService" ref="clientDetailsService"/>
  </bean>

  <!-- 2FA -->

  <bean id="twoFactorWebAuthenticationDetailsSource" class="org.hisp.dhis.security.spring2fa.TwoFactorWebAuthenticationDetailsSource" />

  <bean id="twoFactorAuthenticationProvider" class="org.hisp.dhis.security.spring2fa.TwoFactorAuthenticationProvider" >
    <property name="passwordEncoder" ref="bCryptPasswordEncoder" />
    <property name="userService" ref="org.hisp.dhis.user.UserService" />
    <property name="userDetailsService" ref="userDetailsService" />
    <property name="securityService" ref="org.hisp.dhis.security.SecurityService" />
  </bean>

  <!-- Security : Authentication providers -->

  <sec:authentication-manager alias="authenticationManager">
    <sec:authentication-provider ref="twoFactorAuthenticationProvider"/>
    <sec:authentication-provider user-service-ref="clientDetailsUserService" />
    <sec:authentication-provider ref="ldapAuthenticationProvider" />
  </sec:authentication-manager>
</beans>
