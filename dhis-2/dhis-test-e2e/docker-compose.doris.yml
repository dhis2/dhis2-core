version: "3.8"

services:
  web:
    image: "${DHIS2_IMAGE:-dhis2/core-dev:local}"
    # Only container ports are specified, as the E2E tests run in parallel in Jenkins and using explicit host ports causes collision
    ports:
      - "8080" # DHIS2
      - "8081" # Debugger: connect using commandline flag -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8081
    volumes:
      - ./config/dhis2_home/dhis-doris.conf:/opt/dhis2/dhis.conf:ro
    environment:
      JAVA_OPTS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8081"
    depends_on:
      doris-be:
        condition: service_healthy
      db:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_healthy

  db:
    image: postgis/postgis:13-3.4-alpine
    command: postgres -c max_locks_per_transaction=100
    restart: unless-stopped
    environment:
      POSTGRES_USER: dhis
      POSTGRES_DB: dhis
      POSTGRES_PASSWORD: &postgres_password dhis
      PGPASSWORD: *postgres_password # needed by psql in healthcheck
      LC_COLLATE: C
    healthcheck:
      test: [ "CMD-SHELL", "psql --no-password --quiet --username $$POSTGRES_USER postgres://127.0.0.1/$$POSTGRES_DB -p 5432 --command \"SELECT 'ok'\" > /dev/null" ]
      start_period: 120s
      interval: 1s
      timeout: 3s
      retries: 5
    networks:
      doris_network:
        ipv4_address: 192.168.100.8

  redis:
    image: redis:5.0.5-alpine
    volumes:
      - ./config/redis/redis.conf:/usr/local/etc/redis.conf
    ports:
      - "6379"

  minio:
    image: quay.io/minio/minio
    command: server /data --console-address ":9090"
    ports:
      - "9000" # minio API
      - "9090" # minio UI
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: dhisdhis

  selenium:
    image: "${SELENIUM_IMAGE:-selenium/standalone-chrome:latest}"
    ports:
      - "4444"
      - "7900"

  doris-be:
    image: apache/doris:be-${DORIS_VERSION}
    networks:
      doris_network:
        ipv4_address: 192.168.100.11
    environment:
      - BE_ADDR=192.168.100.11:9050
    ports:
      - 8041:8040
    volumes:
      - ../../docker/doris/postgresql-42.7.5.jar:/opt/apache-doris/be/jdbc_drivers/postgresql.jar:ro
      - ../../docker/doris/create-doris-database.sql:/docker-entrypoint-initdb.d/create-doris-database.sql:ro
      - doris-be-storage:/opt/apache-doris/be/storage
      - doris-be-log:/opt/apache-doris/be/log
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8040/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  doris-be-storage:
  doris-be-log:

networks:
  doris_network:
    ipam:
      config:
        - subnet: 192.168.100.0/24
