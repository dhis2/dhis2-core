@Library('pipeline-library') _

pipeline {
    agent {
        label 'ec2-jdk8'
    }

    triggers {
        cron('H H(9-16)/2 * * 1-5')
        pollSCM('H/30 * * * *')
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
        timeout(time: 20, activity: true)
    }

    environment {
        MAVEN_OPTS = '-Xms1024m -Xmx4096m'
        AWX_TEMPLATE = 37
        HOST = 'play.dhis2.org'
        INSTANCE_NAME = "${env.GIT_BRANCH == 'master' ? 'dev' : env.GIT_BRANCH + 'dev'}"
    }

    stages {
        stage ('Build') {
            steps {
                echo 'Building DHIS2 ...'
                script {
                    withMaven(options: [artifactsPublisher(disabled: true)]) {
                        sh 'mvn -X -T 4 clean install -f dhis-2/pom-full.xml -Pjdk8 --update-snapshots'
                    }
                }
            }
        }

        stage ('Sync WAR') {
            steps {
                echo 'Syncing WAR ...'
                sh 'curl "https://raw.githubusercontent.com/dhis2/dhis2-server-setup/master/ci/scripts/copy-war-s3.sh" -O'
                sh 'chmod +x copy-war-s3.sh'
                sh './copy-war-s3.sh dev ${GIT_BRANCH}'
            }
        }

        stage ('Update Play Instance') {
            steps {
                echo 'Updating Play Instance ...'
                script {
                    withCredentials([usernameColonPassword(credentialsId: 'awx-bot-user-credentials', variable: 'AWX_CREDENTIALS')]) {
                        awx.resetWar("$AWX_CREDENTIALS", "$HOST", "$INSTANCE_NAME", "$AWX_TEMPLATE")
                    }
                }
            }
        }
    }

    post {
        failure {
            script {
                slack.sendFailureMessage()
            }
        }

        aborted {
            script {
                slack.sendInactivityMessage(20)
            }
        }
    }
}
