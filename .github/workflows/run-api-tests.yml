name: Run api tests
env:
  # This is to make sure Maven don't timeout fetching dependencies. See: https://github.com/actions/virtual-environments/issues/1499
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=3 -Dmaven.wagon.httpconnectionManager.ttlSeconds=125

on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, labeled, synchronize ]
concurrency:
  group: ${{ github.workflow}}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  api-test:
    env:
      CORE_IMAGE_NAME: "dhis2/core-pr:${{ github.event_name == 'pull_request' && github.event.number || 'local' }}"
    
    runs-on: ubuntu-latest
    if: "!contains(github.event.pull_request.labels.*.name, 'skip-api-tests')"
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin
          cache: maven

      # we only want to publish to Dockerhub on PRs
      # PRs from forks cannot access secrets so such PRs cannot publish Docker images
      - name: Login to Docker Hub
        if: github.event_name == 'pull_request' && !github.event.pull_request.head.repo.fork
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DHIS2_BOT_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DHIS2_BOT_DOCKER_HUB_PASSWORD }}

      - name: Build war
        run: |
          mvn clean install --threads 2C --batch-mode --no-transfer-progress -DskipTests -Dmaven.test.skip=true -f dhis-2/pom.xml -pl -dhis-web-embedded-jetty,-dhis-test-integration,-dhis-test-coverage
          mvn clean install --threads 2C --batch-mode --no-transfer-progress -DskipTests -Dmaven.test.skip=true -f dhis-2/dhis-web/pom.xml

      - name: Build container image
        run: |
          if [ "${{github.event_name == 'pull_request' && !github.event.pull_request.head.repo.fork}}" = "true" ]; then
            # on PRs (of non-forks): build and publish multi-arch images using Jib. Image is used for api tests in
            # this workflow and can be pulled from Dockerhub by devs to run locally, ...
            mvn --batch-mode --no-transfer-progress -DskipTests -Dmaven.test.skip=true -f dhis-2/dhis-web/dhis-web-portal/pom.xml jib:build -PjibBuild \
                -Djib.to.image=$CORE_IMAGE_NAME -Djib.container.labels=DHIS2_BUILD_REVISION=${{github.event.pull_request.head.sha}},DHIS2_BUILD_BRANCH=${{github.head_ref}}
          else
            # only build image for running api tests in this workflow i.e. master, 2.39, ...
            mvn --batch-mode --no-transfer-progress -DskipTests -Dmaven.test.skip=true -f ./dhis-2/dhis-web/dhis-web-portal/pom.xml jib:dockerBuild \
                -Djib.to.image=$CORE_IMAGE_NAME
          fi

      - name: Run tests
        run: |
          cd dhis-2/dhis-e2e-test
          DHIS2_IMAGE=$CORE_IMAGE_NAME docker compose -f docker-compose.yml -f docker-compose.e2e.yml up --remove-orphans --exit-code-from test

      - name: Upload logs
        if: failure()
        run: |
          cd dhis-2/dhis-e2e-test
          docker compose logs web > ~/logs.txt

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: "tomcat_logs"
          path: '~/logs.txt'

  send-slack-message:
    runs-on: ubuntu-latest
    if: |
      always() &&
      contains(needs.*.result, 'failure') &&
      github.ref == 'refs/heads/master'

    needs: [ api-test ]
    steps:
      - uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_BACKEND_WEBHOOK }}
          SLACK_CHANNEL: 'team-backend'
          SLACK_MESSAGE: "Latest e2e test run on master failed and needs investigation :detective-duck:. \n Commit message: ${{ github.event.head_commit.message }}"
          SLACK_COLOR: '#ff0000'
