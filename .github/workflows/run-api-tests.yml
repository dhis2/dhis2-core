name: Run api tests

on:
  pull_request:
    types: [ labeled, synchronize ]
concurrency:
  group: ${{ github.workflow}}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  api-test:
    env:
      CORE_IMAGE_NAME: "dhis2/core-dev:local"
      PR_NUMBER: ${{ github.event.number }}
      DOCKER_CHANNEL: "dhis2/core-pr"

    runs-on: ubuntu-latest
    if: "!contains(github.event.pull_request.labels.*.name, 'skip-api-tests')"
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: temurin
          cache: maven
      - name: Build core image
        run: |
          mvn clean install --threads 2C --batch-mode --no-transfer-progress -DskipTests -Dmaven.test.skip=true -P jdk8,-default -f dhis-2/pom.xml -pl -dhis-web-embedded-jetty
          mvn clean install --threads 2C --batch-mode --no-transfer-progress -DskipTests -Dmaven.test.skip=true -P jdk8,-default -f dhis-2/dhis-web/pom.xml
          mvn --batch-mode --no-transfer-progress -DskipTests -Dmaven.test.skip=true -P jdk8,-default -f ./dhis-2/dhis-web/dhis-web-portal/pom.xml jib:dockerBuild -Djib.to.image=$CORE_IMAGE_NAME

      - name: Login to Docker Hub
        if: "contains(github.event.pull_request.labels.*.name, 'publish-docker-image')"
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DHIS2_BOT_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DHIS2_BOT_DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Publish docker image
        if: "contains(github.event.pull_request.labels.*.name, 'publish-docker-image')"
        run: |
          docker tag $CORE_IMAGE_NAME $DOCKER_CHANNEL:$PR_NUMBER
          docker push $DOCKER_CHANNEL:$PR_NUMBER

      - name: Run tests
        run: |
          cd dhis-2/dhis-e2e-test
          DHIS2_IMAGE=$CORE_IMAGE_NAME docker compose -f docker-compose.yml -f docker-compose.e2e.yml up --remove-orphans --exit-code-from test

      - name: Upload logs
        if: failure()
        run: |
          cd dhis-2/dhis-e2e-test
          docker compose logs web > ~/logs.txt

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: "tomcat_logs"
          path: '~/logs.txt'
