x-web-base: &web-base
  image: "${DHIS2_IMAGE:-dhis2/core-dev:local}"
  volumes:
    - ./docker/log4j2.xml:/opt/dhis2/log4j2.xml:ro
  environment:
    JAVA_OPTS:
      "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8081 \
      -Dlog4j2.configurationFile=/opt/dhis2/log4j2.xml
      -Dcom.sun.management.jmxremote \
      -Dcom.sun.management.jmxremote.port=9011 \
      -Dcom.sun.management.jmxremote.local.only=false \
      -Dcom.sun.management.jmxremote.authenticate=false \
      -Dcom.sun.management.jmxremote.ssl=false"
    CATALINA_OPTS: "${CONTEXT_PATH:+-Dcontext.path='${CONTEXT_PATH}'}"
    DHIS2_PORT: "${DHIS2_PORT:-8080}"
    DEBUG_PORT: "${DEBUG_PORT:-8081}"
    JMX_PORT: "${JMX_PORT:-9011}"

x-db-base: &db-base
  image: ghcr.io/baosystems/postgis:12-3.3
  volumes:
    - ./docker/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
    - db-dump:/opt/dump:ro
  environment:
    POSTGRES_USER: dhis
    POSTGRES_DB: dhis
    POSTGRES_PASSWORD: &postgres_password dhis
    PGPASSWORD: *postgres_password # needed by psql in healthcheck
    DB_PORT: "${DB_PORT:-5432}"
  healthcheck:
    test:
      [
        "CMD-SHELL",
        'psql --no-password --quiet --username $$POSTGRES_USER postgres://127.0.0.1/$$POSTGRES_DB -p 5432 --command "SELECT ''ok''" > /dev/null',
      ]
    start_period: 120s
    interval: 1s
    timeout: 3s
    retries: 5
  depends_on:
    db-dump:
      condition: service_completed_successfully # make sure the DB dump has been downloaded

services:
  web:
    <<: *web-base
    volumes:
      - ./docker/dhis.conf:/opt/dhis2/dhis.conf:ro
    ports:
      - "127.0.0.1:${DHIS2_PORT:-8080}:8080" # DHIS2
      - "127.0.0.1:${DEBUG_PORT:-8081}:8081" # Debugger
      - "127.0.0.1:${JMX_PORT:-9011}:9011" # JMX port
    depends_on:
      db:
        condition: service_healthy

  db:
    <<: *db-base
    ports:
      - "127.0.0.1:${DB_PORT:-5432}:5432"

  # Test synchronizing data and metadata between two DHIS2 instances
  # Run
  #   docker compose --profile sync up

  web-sync:
    <<: *web-base
    volumes:
      - ./docker/dhis-sync.conf:/opt/dhis2/dhis.conf:ro
    profiles: [sync]
    ports:
      - "127.0.0.1:${DHIS2_PORT_SYNC:-8082}:8080" # DHIS2
      - "127.0.0.1:${DEBUG_PORT_SYNC:-8083}:8081" # Debugger
      - "127.0.0.1:${JMX_PORT_SYNC:-9012}:9010" # JMX port
    depends_on:
      db-sync:
        condition: service_healthy

  db-sync:
    <<: *db-base
    profiles: [sync]
    ports:
      - "127.0.0.1:${DB_PORT_SYNC:-5434}:5432"

  db-dump:
    image: busybox
    command: sh -c '[ -f dump.sql.gz ] && echo "dump.sql.gz exists" || wget --output-document dump.sql.gz $$DHIS2_DB_DUMP_URL' # only download file if it does not exist
    environment:
      DHIS2_DB_DUMP_URL: "${DHIS2_DB_DUMP_URL:-https://databases.dhis2.org/sierra-leone/dev/dhis2-db-sierra-leone.sql.gz}"
    working_dir: /opt/dump
    volumes:
      - db-dump:/opt/dump

volumes:
  db-dump: {}
